
========================================================================================
SUMMARIES AND ENCRYPTION :
========================================================================================
Summary of hashing in non-sensitive situation :
 | 
 . a word dictionary (disk -> RAM)
    . word -> QUICK LOOKUP (of an entry in a file)
    |
    . take a KEY (unique string or number of any basis)
    -> HASHING ALGORITHM : compute a (hopefully) unique hash code
    -> MODULO OPERATOR : compute the corresponding index 
    -> located bucket with the key (input) and the value ("output")
    . one and the same number of steps => O(1) 
 |
 . entry generation -> structure growth
    . key -> hash code -> array index -> data set
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Summary of hashing in private situations :
 | 
 . bank database 
    . (unique , private) key -> QUICK LOOKUP (of an entry in a database)
    | 
    . need a hash function (hashing algorithm) 
       . key -> hash code -> array index -> data set
       . key = unique number of any basis
    . HAS TO BE FAST 
       . O(1) , or 1:1
    . has to be difficult enough to maximize breaking time
       . otherwise , a hacker can generate a valid hash code soon enough

_
