========================== Turbo C/C++ cheat sheet ============================
===============================================================================
===============================================================================

The Turbo C++ IDE/compiler can handle anything that Turbo C can handle, but not
vice versa. 
-------------------------------------------------------------------------------
mode 12h - 640x480x16 
mode 13h - 320x200x256 
-------------------------------------------------------------------------------
Turbo C++ 3.2 automatically includes: 
 . stdio.h
 . conio.h
 . sound functionality of dos.h
-------------------------------------------------------------------------------
TC does not support	for(int n=...) 
 - so instead write 	int n; for(n=...)

===============================================================================
===================== GRAPHICS - libraries and functions: =====================
===============================================================================

-------------------------------------------------------------------------------
----------------- Method 1 - manual mode switching (Mode 13h): ----------------
-------------------------------------------------------------------------------

#include <conio.h>
#include <dos.h>	// necessary for geninterrupt() 

#define VIDEO_SEGMENT   0xA000
#define SCREEN_WIDTH    320

void SetMode13h ()
{
    _AH = 0;
    _AL = 0x13;
    geninterrupt (0x10);
}

void SetTextMode ()
{
    _AH = 0;
    _AL = 0x03;
    geninterrupt (0x10);
}

void PutPixel (int x, int y, unsigned char color)
{
    pokeb (VIDEO_SEGMENT, (y * SCREEN_WIDTH) + x, color);
}

-------------------------------------------------------------------------------
---------------------- Method 2 - BGI (stuck in Mode 12h): --------------------
-------------------------------------------------------------------------------

<graphics.h>

 + int gd = DETECT, gm;
   . DETECT 	- a macro in "graphics.h". Tells the compiler to automatically 
		  look for the graphics driver. 
   . gm 	- graphics mode. Enables plotting of pixels. 
   . color 	- represented with an integer index. 

 + initgraph(&gd, &gm, "C:\\TURBOC3\\BGI\\");
   . loads the indicated graphics driver, thus initializing the gfx sys/mode. 
   . the system allocates memory for graphics-related data and instructions. 

 + putpixel(639, 479, GREEN); 
 ... 
 + closegraph(); 
   . ends gfx mode, releases all the memory allocated by the graphics system. 

- - - - - - - - - - - - Other graphics-related functions: - - - - - - - - - - -

 . outtextxy(240, 50, "Concentric circles"); 
 . setcolor(RED);
 . circle(getmaxx()/2, getmaxy()/2, 30); 

===============================================================================
================== SOUND / MUSIC - libraries and functions: ===================
===============================================================================

<dos.h>
 (1) sound(800); 	- generates a tone at the indicated frequency. 
 (2) delay(1500);  	- sustains the tone at the indicated length. 
 (3) nosound(); 	- cuts off the tone. 

===============================================================================