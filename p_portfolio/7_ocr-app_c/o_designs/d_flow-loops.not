
Name of target image file: _
Estimate <left> margin in %: _
Estimate <right> margin in %: _
Estimate <top> margin in %: _
Estimate <bottom> margin in %: _
Estimate greyscale threshold (0-255): _
Generating config file "img_cfg.txt" ...
Extracting selection into a separate image file ...
Filtering selection against greyscale threshold ...
Applying dilation and erosion to all image objects ...
Scanning for recognizable characters ...
All stage images generated
Recognized dollar amount: 
============================================================

Globals:
- struct Target_Para.h 
  - filename
  - width
  - height
  - left_m
  - right_m
  - top_m
  - bottom_m

PROC_FILE()
|



Do While BAD_L
- "Estimate <left> margin in %: _"
  GET L
  PROC L



GET_VALID_REQS()
|
"Estimate <left> margin in %: _"
 left_m = GET_VAL (min=0, max=width-1)
"Estimate <right> margin in %: _"
 right_m = GET_VAL (min=left_m, max=width-1)
"Estimate <top> margin in %: _"
 top_m = GET_VAL (min=0, max=height-1)
"Estimate <bottom> margin in %: _"
 bottom_m = GET_VAL (min=top_m, max=height-1)
"Estimate greyscale threshold (0-255): _"
 grey_thr = GET_VAL (min=0, max=255)

............................................................

GET_IMG_PROPS()



GET_VALID_NAME()
|
Do While BAD_IMGNAME 
- "Name of target image file: "
  GET file_name
  PROC file_name :
  - ASCERTAIN file exists
    - if not, "File is not in the current directory. \n"
    - else
      - ASCERTAIN file_name ends with ".jpg" | ".jpeg" | ".gif" | ".png"
      	- if not, "Filename must end with ".jpg", ".jpeg", ".gif", or ".png"
	- else 
	  - CLEAR BAD_IMGNAME
	  - LOAD file_name



RUN_CORE_FUNCS()
|
v GET_VALID_NAME()
GET_IMG_PROPS()		// width, height 
GET_VALID_REQS() 	// left, right, top, bottom, greyscale threshold
PROC_FILE()



IN:
|
v RUN_CORE_FUNCS()

.