========================================================================================
UART : 
========================================================================================

 + simple design
    . transmitter line 
    . receiver line
    
 - error-prone
    . no built-in mechanisms 
 
 . serial
 . asynchronous 
 . "Universal Asynchronous Receiver/Transmitter" 
 . has a long history of development 

========================================================================================

"
- A Universal Asynchronous Receiver Transmitter (UART) is a type of communication in which data is transferred SEQUENTIALLY BIT BY BIT. 
- You need a TRANSMITTER and a RECEIVER to perform UART communication.
"

========================================================================================

"
The concept of UART (Universal Asynchronous Receiver-Transmitter) and asynchronous serial communication has roots dating back to the early days of telegraphy and telephony. However, the specific term "UART" and the development of integrated circuits with UART functionality occurred in the mid-20th century.

Key points in the historical development of UART:

1. **Telegraphy and Early Telephony:**
   - The concept of sending data asynchronously without a shared clock signal can be traced back to early telegraph systems in the 19th century.

2. **Teletypewriters (TTYs) and Teleprinters:**
   - Teletypewriters and teleprinters, widely used in the mid-20th century, employed asynchronous serial communication principles. These devices were predecessors to modern UART communication.

3. **Introduction of UART Term:**
   - The term "UART" (Universal Asynchronous Receiver-Transmitter) was introduced as a designation for integrated circuits designed to handle asynchronous serial communication.

4. **RS-232 Standardization:**
   - The RS-232 standard, introduced in the early 1960s by the Electronic Industries Association (EIA), defined electrical characteristics and signal assignments for serial communication, providing a framework for UART implementations.

5. **Integration into Microcontrollers:**
   - UART functionality became a standard feature in microcontrollers and microprocessors, allowing for asynchronous serial communication in embedded systems.

6. **Widespread Adoption:**
   - The widespread adoption of UART communication occurred in the 1970s and 1980s with the rise of personal computers. UARTs were essential components for connecting peripherals like modems, printers, and mice to computers.

7. **Continued Evolution:**
   - UART communication continued to evolve with the integration of more advanced features and higher data rates in modern microcontrollers and communication protocols.

While the underlying principles of asynchronous serial communication have a long history, the specific term "UART" and the development of dedicated integrated circuits for UART functionality gained prominence in the mid-20th century. The integration of UART into microcontrollers and its standardization contributed to its widespread use in various electronic systems and communication applications.
"

========================================================================================

"

Among UART, SPI, and I2C, UART is the most favored communication interface in general-purpose operating system hardware. UART has been a standard serial communication protocol for many years and is widely supported by various hardware components, including motherboards, expansion cards, and peripherals.

The main reasons why UART is favored in general-purpose operating system hardware are:

1. Legacy Support: UART has been a standard interface in computing hardware for a long time, and many legacy devices and peripherals use UART for communication. As a result, UART support is well-established in most operating systems, and it is often included in modern hardware for backward compatibility with older devices.

2. Simplicity: UART is straightforward to implement, making it an attractive choice for various hardware devices. It uses asynchronous communication, which simplifies hardware design and reduces the overhead associated with synchronous protocols like SPI and I2C.

3. Versatility: UART can be used for various applications and supports both point-to-point and point-to-multipoint communication. It is commonly used for interfacing with a wide range of peripherals, including GPS modules, Bluetooth devices, serial printers, and more.

While SPI and I2C are also utilized in certain hardware scenarios, they are more commonly found in embedded systems and specialized applications that require specific features provided by these interfaces. In contrast, UART's widespread support and ease of use have made it a preferred choice for general-purpose operating system hardware, where versatility and legacy compatibility are essential considerations.
"
_
