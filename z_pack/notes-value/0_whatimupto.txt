Programming is about learning systems, and systems are about wish fulfillment. Programming is about the “how”. The programmer knows how it’s done. Scripting is about wish fulfillment with ignorance on the part of the user. Scripting is about productivity. 

The most basic wish; more sophisticated wishes. 

Languages are abstractions; each one comes with a baggage. 

Shorter filenames 

Windows teaches compliance in the name of safety

Bash teaches responsibility 

C teaches responsibility 

Informed opinion 

Abstraction / assumptions

Hallucinations -> repo. 

Sys76/popos/ALSA+, PipeWire

MSYS2 

umask 027

umask 077

Non-refund? Recommend res time? Per trip or per person? 

DosBox

0 and NULL cached in binary - how? 


Heli: 

    Rainbow Air: 9a-dusk every day, by reservation, 9990 Porter Road, 11-14 mins duration, $165 per trip. 
    Airplanes Over Niagara: 8a-7p, 30 mins duration, $149 per trip, 9900 Porter Road (different address!) 

MM: 9a, every 15 minutes, daily, $28.25

CW: 8a-8p, every 8 minutes, $21,

Acq: 9a, 701 Whirlpool, $20 

Trolley: $3

| 

Build smth or help maintain smth

Watch others work

Project: WEBSITE FOR TERMINALS

Project: a command that solves a problem 

|

C: structs can’t have functions; they can have function pointers. 

C++: classes can have functions; flexible OOP (encap, inher, polym); safer implementations (data streaming, ?? automated resource management ??). 


 - ipconfig

 - telnet ip-address 13531 

|

Create my own Internet capability. 

|

users

netstat

finger

radio 


Peer-to-peer 

Bath 



> Music 

Books, courses on: EE, ASM, digital logic, comp.arch, C, Forth. 

> brush/floss 

|

Who writes graphics libraries? 

Who writes the bootstrap/boot loader? 

Who writes kernels? 

Who writes compilers? 

Who writes video drivers? 

Who designs the daemon process? 

Who designs BIOS/UEFI? 

File systems: 

 - master boot record, extended boot record 

Booting sequence > 

Etc. 

Page flipping 

Do Last Call BBS 

> Look for dentists. 


Sound with DMX 

Try smth modern > srand(*clock); 

Turbo C to put an image on the screen. 

Learn how to play a track with TurboC. 

YT: near, far, and huge pointers. 

Use Microsoft compiler for DOS(Box) : 

 - far and near pointers ? 

Source code dirs. 

Blood source code. 


Painter’s algorithm. 

Clear the cache for unsecure networking. 

Create email addresses. 

Peer-to-peer 

How is a monitor made: old IBM/Compaq and new ASUS for PC/laptop. 

|

Finish the flowchart 

Autopilot: tutorial 


Continue designing with the pseudocode. 

Install VM / Ubuntu on the Windows laptop. 

 > continue designing there (sound, music, moving lines). 


 - Raspberry PI > old Dell/Mint 

 V flash (32Gstr, 64b img) for Mac OS X, 

9V Transistor Radio kit : Arduino ? 


Google Drive: PROG < Profile: old Dell, new Dell, Mac, CyberForge > Google Drive. 


No crunching, stay small, don’t be selfish/lazy. 


Feb. 1: 

a) check out houses for rent in Black Rock. 

b) talk to a RocketMortgage / BoA consultant about the math, a sit-down? 


Hair, Floss 

Sequenced beeps. 


Archie, RaceTrack, Courtyard, Carpenter, 


FLOSS


Windows: 

 - IDE: VS 

 - lang: C# 

 - GUI API: WinAPI 


Linux: 

 - IDE: Vim, Linux IDEs (GNOME<GTK+, KDE<Qt, Cinnamon<?) 

 - Python 

 - GUI API: none 

 > (surrogate systems: X Window / network protocol / server, 

   = Xlib, XCB libs use the X Window server; 

   = toolkit libs: GTK+, Qt). 


Learn to make Archie: 

|

Mini-map 

Learn C# WinApp elements 

Plasticine 


Design classes: 

MapElem: 

 - sprites[ ] 

 - tilePos 

 - isShown = true; 

Units:


M2 chip: 

Device cell-batteries powering every cmpt 


A method of killing time: 

 - HEX editor / HEX dump workings 

 - finding cool, (im)practical things to do). 

Copy PROG folder to GoogleDrive. 


Memory drivers. 

Expanded and extended memory. 

Alias, hi-res, 16-bit color, more than 256 colors. 
