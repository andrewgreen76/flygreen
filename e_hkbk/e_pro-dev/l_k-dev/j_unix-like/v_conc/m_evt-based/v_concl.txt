
No solution is perfect and we have to deal with the drawbacks of the solutions we choose.


 . multi-threading
 |  + efficiency (concurrency , getting around system calls)
 |  - complexity (synchronization primitives)
 |  - race conditions 
 |
 . event-driven
    + ease of design and implementation
    + no race conditions
    - no efficiency (no concurrency , risk of "freezing the core")


We need a balance between these two strategies. 
|
. AIO 
   + an I/O thread + one or more threads
     => not purely event-driven
   . can be more thread-based than event-driven or vice versa
_
