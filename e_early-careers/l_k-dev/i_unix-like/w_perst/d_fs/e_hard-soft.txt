
link() :
 |
 . can make a link ("file") 
    . creates a struct inode with metadata for the file 
    . ties that inode (number) to the name given by the user  

====================================================================================================
HARD LINKS ("COPIES") : 
====================================================================================================

 . can create a hard link (alias/"copy") of the original file 
 |  . the original and the new links are mapped to the same inode (number)  
 |  
 . link( const char * old_pathname , const char * new_pathname )
 $ ln target copy 
 |
 . link count = count of references ("files") to the same inode 
 | . every link() increments the count
 | . every unlink() decrements it
 |    . link count = 0    =>    data blocks are released , the inode is released 
 |
 . An attempt to make a single change to the content under the hard link
   leads to splitting off as a different file.
    -> Same second symbolic link , different inode , a separate link count => different file

 . a hard link to a directory cannot be created (=> redundancy)
 . a hard link to a file in a different disk/partition cannot be created 

====================================================================================================
SYMBOLIC/SOFT LINKS : 
====================================================================================================

 . creates a "shortcut" , not a copy
 . if the src is removed , the link has a dangling pointer 
 $ ln -s target link 
_
