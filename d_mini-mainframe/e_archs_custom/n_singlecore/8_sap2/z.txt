
1
ADD B	80	5	S,Z	Register	1	A = A + B
ADD C	81	5	S,Z	Register	1	A = A + C

ANA B	A0	5	S,Z	Register	1	A = A & B
ANA C	A1	5	S,Z	Register	1	A = A & C

ANI byte	E6	7	S,Z	Immediate	2	A = A & byte

2
CALL addr	CD	9	-	Immediate	3	Call function at addr

CMA	2F	4	-	Implied	1	A = ~A

DCR A	3D	4	S,Z	Register	1	A = A - 1
DCR B	05	4	S,Z	Register	1	B = B - 1
DCR C	0D	4	S,Z	Register	1	C = C - 1

3
HLT	76	4	-	-	1	Halt execution

INR A	3C	4	S,Z	Register	1	A = A + 1
INR B	04	4	S,Z	Register	1	B = B + 1
INR C	0C	4	S,Z	Register	1	C = C + 1

JMP addr	C3	8	-	Immediate	3	Jump to addr

4
JM addr	FA	4/8	-	Immediate	3	Jump to addr if S Flag == 1

JNZ addr	C2	4/8	-	Immediate	3	Jump to addr if Z Flag == 0

JZ addr	CA	4/8	-	Immediate	3	Jump to addr if Z flag == 1

LDA addr	3A	10	-	Direct	3	Load A with value at addr

MOV A, B	78	4	-	Register	1	A = B
5
MOV A, C	79	4	-	Register	1	A = C
MOV B, A	47	4	-	Register	1	B = A
MOV B, C	41	4	-	Register	1	B = C
MOV C, A	4F	4	-	Register	1	C = A
MOV C, B	48	4	-	Register	1	C = B

6
MVI A, byte	3E	6	-	Immediate	2	A = byte
MVI B, byte	06	6	-	Immediate	2	B = byte
MVI C, byte	0E	6	-	Immediate	2	C = byte

NOP	00	3	-	-	1	Do nothing

ORA B	B0	5	S,Z	Register	1	A = A
7
ORA C	B1	5	S,Z	Register	1	A = A

ORI byte	F6	7	S,Z	Immediate	2	A = A

RAL	17	4	-	Implied	1	A « 1, LSB becomes zero

RAR	1F	4	-	Implied	1	A » 1, MSB goes to LSB

RET	C9	5	-	Implied	1	Return from function

8
STA addr	32	9	-	Direct	3	Store value in A at addr

SUB B	90	5	S,Z	Register	1	A = A - B
SUB C	91	5	S,Z	Register	1	A = A - C

XRA B	A8	5	S,Z	Register	1	A = A ^ B
XRA C	A9	5	S,Z	Register	1	A = A ^ C

9
XRI byte	EE	7	S,Z	Immediate	2	A = A ^ byte

41 opcodes / 25 instructions 

+ IN + OUT = 43 opcodes / 27 instructions. 

_
