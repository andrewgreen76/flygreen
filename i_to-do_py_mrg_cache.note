
bring up connectivity for potential Zoom interviews 
exchange denominations
coughdrops
to teach or find work.
|
C in bites, definitions, praxis :
- brush up on :
  - fscanf(),		# fileprint?
  - sprintf(), etc	# storeprint?
- dangling,
- memory leak 
- memcpy() / Turbo C
- typedef
- struct
- enum
- etc 
revisit grid v. comp
unwrap 1_net.cht into the parent dir 
add material on io-ports, net-ports to hackbook 
networking arpanet-style : telnet, cmds, identify arch/prdm, etc. 
Focus on : Rust, SSH, MOSH, linux servers, network management, systemd.  
iPhone : how to termius, free SSH client, MOSH 
Why do I need SSH for Wayland ? 
1hr : Rust : create an interactive text-based prog (text-ed)
explore .bash_profile / .profile 
how does a sys know if smth is a val | var | ptr(addrOf2ndVar)
1hr : C++ and OpenCV : image-processing prog
learn git branches ; Re-learn how to merge in a Git repo	<<<	build a sandbox repo. 
Start packing
kids engr kit 
Apply for : System76 / Canonical / Tesla. 
Confirm the fw-usp order for coreboot
Just do DOSBox 
Research frameworks (toolsets) dedicated to building VMs, EMUs, Last Call BBS (Unity + ??)
|
+-- Learn to maintain the kernel (w/ KDevelop or Qt)
|
+-- emus of : Comm64/Atari 2600/Apple II.
|   	 - coded in C
|	 - teaching x86asm(GAS, nasm)
v
Work on the graphics mode for headless systems: kernel KMS > Wayland. 

add-on
leveraging
container technology
Explore kernel vs. microkernel. 
what does memgmt look like on the sys memmap ? 
troubleshoot the firefox/google business 
analyze git mv pointer-looking things 
unity engine arch
fc


.data
    message:    .asciz "I am Andrew Green\n"

.text
.global main

main:
    # Write the string to the standard output
    mov     $4, %eax          # System call number for write
    mov     $1, %ebx          # File descriptor 1: standard output
... A-a-a-ah! ... tl;dw

extract from networking.odt
analyze every boring alg in py : What does it make happen? 
write here's johnny in py
keybindings , ANSI esc seqs , UTF-8,-16,-32 
ttys: cmd v. auth
docker
pytorch
journal.notes -> hackbook
memmap
interview questions: C
interview questions: C++
interview questions: C#
.py to go to a url/website
funbag >< progbook (cheat sheets)
How do systems on planes fetch WiFi connection in the airplane mode? Are they isolated servers?
Experiment with GDB. 

=====================================================================

floss

find a poke api lib 
find a sound api lib 
shit to lug

