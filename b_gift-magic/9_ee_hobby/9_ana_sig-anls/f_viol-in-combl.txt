
====================================================================================================
PROBLEM 1 : UNEXPECTED LOGIC VIOLATIONS IN PURELY COMBINATIONAL LOGIC CIRCUITS ... AND THE SOLUTION  
====================================================================================================

Suppose we have deterred signals breaking the circuit's logic. 
 . Think back to BEN EATER'S VIDEO ON PULSE TRIGGERING USING THE DELAY EXPLOIT WITH TTL INVERTERS. 
 . Every gate (transistors) introduces a tiny amount of delay (like a speedbump).
 => Delays have a way of snowballing with every new gate on a purely combinational logic path. 
 . Different lines may have different gate/transistor counts => different delay times on different paths. 
 => Delay -> breaking synchronization -> breaking circuit logic (just as we get 1 from AND-ing instant
 |  input 1 with the 1 from an odd number of inversions).
 |
 . There might be other side-effects resulting from the hardware's physical limitations. 


Solutions : 

 (a) We could learn about all sorts of hardware phenomena and devise ways of handling them while sticking
     with purely combinational logic. 

 (b) We can get the faster signals to wait on the slower ones with not-enable time intervals ... and let them through
     only at momentary-enable , or clock pulses. 
       Fast-traveling signals should run into ~ENABLE stumbling block ("dormancy") at a clock-triggered gate and GIVE
       THE SLOW-TRAVELING COMBINATIONAL-LOGIC SIGNALS SOME TIME to reach their desired state at their clock-triggered
       gates before proceeding. Once the combinational-logic signals "stabilize" , or reach their expected state at
       a clock-triggered gate, they will come in "synchrony" with the faster signals , and all can proceed at the next
       clocked-enable pulse. 


=> Unbridled data signals , gate-induced and path-length -induced propagation delays , and datapath looparounds
     are all factors that can make a mess and break circuit logic. 

_
