
===================================================================
Intel x86 supports massive pages :
===================================================================

. traditionally : 4KB
. modern systems : 2MB , 1GB
|
|
. larger pages
  . pros : 
    => fewer pages per address space
    => fewer mappings    +    more TLB hits than misses 
    . TLB misses are serviced faster
    . page allocation is faster
  . cons :
    . internal fragmentation
    . wasting memory with hardly-used pages
    . more I/O swaps 
|
|
Transparent big page support (mode) :
. kernel searches for large pages without modifying applications

===================================================================
Linux page cache : 
===================================================================

. retains most-used pages from : 
  . memory-mapped files
  . metadata and files from devices (accessible via read() and write() system calls)
  . process heap pages and process stack pages 
. has its own hash table for storing these entries 
_
