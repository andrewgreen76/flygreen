=====================================================================================================================================================
MULTI-LEVEL INDEXING (FOR A LARGE FILE) :
=====================================================================================================================================================

Let's say
 . we want to allocate data the total size of 4 GB
 . 12 direct ptrs
 |
 . in this example every level extends file size by 1024 times 
 . (one indirect ptr per inode)
 ? (one indirect ptr per level ?)
   	_________________________________________________________________________________________________________________________________________
		Level 1			Level 2				Level 3			Level 4
   	_________________________________________________________________________________________________________________________________________
	direct				indirect		double indirect	+ 
   	_________________________________________________________________________________________________________________________________________

	      data blocks 
	* [12+] [ 1 -> 4Kdbl]
		[ 2 -> 4Kdbl]
		[...	    ] 	          
		[...	    ]		  
		[...	    ]
		[12 -> 4Kdbl]
	     +
	     index blocks
		[ ---------------> [   1 -> 4Kdbl]
				   [   2 -> 4Kdbl]
				   ...............
				   [1024 -> 4Kdbl]
				   [   + -------------> [   1 ------------------> * [1024] -> [   1] -> 4Kdbl
				       	 		      			    	   ..................
				       	 		      			    	   -> [1024] -> 4Kdbl
				   
				       	 		[   2 ------------------> * [1024] -> [   1] -> 4Kdbl
				       	 		      			    	   ..................
				       	 		      			    	   -> [1024] -> 4Kdbl
							.....................................................
				       	 		[1024 ------------------> * [1024] -> [   1] -> 4Kdbl
				       	 		      			    	   ..................
				       	 		      			    	   -> [1024] -> 4Kdbl
	
 . modern file systems use multi-level indexing
 . the structure is that of an unbalanced tree because most files are small 	
_
