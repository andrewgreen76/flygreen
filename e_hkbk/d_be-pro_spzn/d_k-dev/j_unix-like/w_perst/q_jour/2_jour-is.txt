===============================================================================
JOURNALING - WHY ? 
===============================================================================

 (a) `fsck` is slow and scans the entire drive 


 (b) journaling :
      |
      . pre- disk-write / crash / outage
      |
      . quickly store PLANS for a file (instead of an entire new state of file or FS) :
       	 |
	 . target file/location		  => immediate jump to the corrupted file (metadata/data) 
	 . file changes (ins, del, ...)   => recovery measures
       	 . logged in `struct journal`
	 . superblock +> journal entries -> a block group somewhere in the middle of the disk
	 |
	 . does not log entire metadata as backup 
	 . does not log entire data as backup 


	 . crash -> recovery :
	    |
	    . Which safe state do we want to get to ?
	    |  (a) safe state before crash is regained
	    |  (b) desired post-write state is achieved
            |   |
 	    |  (a) roll back (revert) the changes to FS , achieving the initial stable state 
 	    |  (b) replay (re-enact) all the changes to FS , achieving the final stable state 
 	    |
	    . How are we going to get to it ? 

_
