
One of the messiest subjects to teach correctly. 


===================================================================================
VIRTUAL MACHINE 
===================================================================================

 . looks like an OS within an OS
 . actually , functionally , it is A SOFTWARE-BASED EMULATION OF A GUEST SYSTEM - NOT NECESSARILY AN OS - within
     a host system 
 . get its own share of hardware resources (CPU cores , RAM , disk space)
 + a good substitute for (1) having another physical computer with a different OS and (2) dual-booting
 . governed by a software-based super-entity called the HYPERVISOR ; a hypervisor gets to manage multiple VMs 


===================================================================================
CONFUSION WITH OTHER "VIRTUAL MACHINES" 
===================================================================================

 . KVM - a hypervisor , meaning it manages slots called VMs that have guest OS running in them 
 . DOSBox - mimics a computer with its own x86 CPU cores , RAM , and storage 
 . CHIP-8 - an interpreted coding language and a "VM" , but as a "VM" it mimics a CPU with a dedicated
     instruction set , operating purely as software 


===================================================================================
HYPERVISORS : 
===================================================================================

Hypervisor :
 . runs multiple VMs - each VM a slot for an isolated system , like an OS 

Type-1 :
 . firmware 
 . started between the POST and the moment an OS bootloader is considered
 . ex. : VMware ESXi , Microsoft Hyperâ€‘V , and Xen 

Type-2 :
 . software 
 . runs multiple OS' within an already-running OS 
 - slows down the host OS a bit
 . ex. : VirtualBox (VBox , VB) , VMware workstation 

_
