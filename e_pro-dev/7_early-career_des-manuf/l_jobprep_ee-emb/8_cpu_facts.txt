
Staff size :
 . "Designing a CPU typically involves A LARGE TEAM OF ENGINEERS, including hardware designers, architects,
    verification specialists, software engineers, and support staff, with the size of the team ranging from
    dozens to hundreds depending on the complexity of the processor."

Prototyping : 
 . "... CPU designers typically prototype their work using SIMULATION TOOLS, FPGA-BASED MODELS, and sometimes
    smaller-scale physical prototypes to test and verify their designs before full-scale production."

Why FPGAs : 
 . "FPGA-BASED MODELS are used by CPU designers because they allow for fast, flexible prototyping and testing
    of hardware designs in real-time, enabling quick iterations and validation of functionality BEFORE COMMITTING
    TO ASIC FABRICATION."

Why not FPGAs :
 . "While it's possible to implement ASIC logic in FPGAs, ASICs are typically more efficient in terms of power,
    cost, and performance for mass production, while FPGAs offer more flexibility for prototyping and smaller-scale
    applications."


"
Jonathan Kang
Â·
Follow
CPU DesignerUpvoted by
Raymond Paseman
, MS Computer Science, University of California, San Diego (2014) and
Suprajith HS
, MSc Computer Engineering, University of Paderborn (2020)12y
Originally Answered: What is like to design CPUs for a living?

I've found this varies significantly depending on the group and company you work for. There are strikingly different environments and work cultures that are carried over from the history of the design group as well as management. However, I'll try to generalize:

Day-to-day:

[...] the vast majority of the time is spent STARING AT SIMULATION WAVEFORMS and FIGURING OUT WHAT WENT WRONG. Like most engineering jobs, DEBUGGING TAKES THE MOST TIME. A CPU generally takes 2-4 years to make with various phases that will bring about different types of day-to-day work.

During initial micro-architecture development, it's mostly a lot of meetings and a lot of data collecting. Data from performance models -- cycle accurate models written in C++ meant to simulate the per-cycle performance -- must be collected to get a rough gauge of what the target performance is like. Data from previous test-chips and circuit models must be collected to get a rough idea of how fast various cells (AND, OR gates, compressors, multiplexers, flops, etc.) will perform under various conditions. Data from management about maximum die-size -- which is the biggest factor in cost -- as well as power requirements.

After that, a rough draft of the micro-architecture is created; the CPU is then broken down into various natural partitions -- the execution unit, floating point unit, load/store pipeline, fetch and decode, etc. During this time, each designer's handed their own partition and goes off to create more detailed micro-architecture. During this phase, the day-to-day consists mostly of reading papers on either ACM or IEEE to study what's been done before and deciding if you can make improvements on it or adapt it to suit your performance/power/area needs. Data collected from previous designs help a lot here as they give a far more realistic idea of what to expect in the final implementation.

Then comes the actual coding phase. Depending on the workflow -- it varies per company -- this will likely involve a lot of scripting; there's a saying that Perl is the most popular CAD tool. This is also the time to run synthesis and timing analysis on your own partition. This kind of early feedback isn't necessarily very accurate but it gives some idea of any major problems in the logic in terms of frequency/power/area.

Then comes a long long long while of debugging. A well established CPU group will have had verification engineers make a robust and thorough random simulation environment at this point -- it generates random sequences of instructions and checks the results on either an instruction-by-instruction boundary or a cycle boundary. From this point on, simulations are run 24/7. Anything that fails will be saved off and added onto the list of things the designer has to look at.
"
_
