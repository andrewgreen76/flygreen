
========================================================================================
A Pipeline for the Incremental Development of a Custom CPU/Computer 
Design Document
by Andrew Green
========================================================================================


========================================================================================
OBJECTIVES:
========================================================================================

Build a custom CPU
Build a general-purpose computer with peripherals


========================================================================================
DESIGN CHECKPOINTS: 
========================================================================================

Firmware EEPROM :
 |
 . compatible with RISC-V
 . input : address
 . output : instruction 


CPU:
 |
 . clock
 -> busses:
    - C-bus - for control signals , 32-bit , 	ribbon cable 
    - A-bus - for addresses ,	     8-bit ,	bus rails
    - D-bus - for data,     	     8-bit , 	bus rails
    - I-bus - for instructions ,     8-bit , 	bus rails  
 -> PC 	      - program counter
 -> MAR + MDR - memory address register + memory data register
 |
 -> general-purpose registers (GPRs)
    - x0 : always holds 0
    - x1-x31. No accumulator , base register , clock/counter register , etc.
 |
 -> ALU 


Microcode ROM :
 |
 . clock-based EEPROM programmer
 . control logic EEPROMs


 . CPU circuit board with all registers, lines, and other components fully functioning


Computer:
 |
 . added BIOS ROM, running BIOS off of ROM
 . built a screen
 . connected the CPU to large ROM, large RAM, and I/O devices: key switches, the screen, and a permanent storage unit
 . expanded computer architecture width to 16 bits 
 . expanded computer architecture width to 32 bits 
 . expanded computer architecture width to 64 bits 


========================================================================================
MEANS OF REALIZATION: 
========================================================================================

Logisim
Altium Designer
PCBWay


========================================================================================
VISUAL DESCRIPTION: 
========================================================================================

features that define the general image of the device; components responsible for the mechanics; 
breadboard; PCB 


========================================================================================
PROGRAM INPUT - PHYSICAL MEDIA:
========================================================================================

ROM: 
storage: 


========================================================================================
ARCHITECTURE - GENERAL: 
========================================================================================

Modeled after RISC-V
Address bus width: 
Data bus width:
Control bus width:
Control signal count:
Instruction bus width:
Registers: 
Interrupts:
Etc.: 
https://en.wikipedia.org/wiki/Instruction_set_architecture
https://en.wikipedia.org/wiki/Simple-As-Possible_computer


========================================================================================
ARCHITECTURE - INSTRUCTION WORD FORMAT:
========================================================================================

Modeled after RISC-V


========================================================================================
CONTROL LOGIC MICROCODE:
========================================================================================

Modeled after RISC-V


========================================================================================
ASSEMBLY FLAVOR / DEDICATED ASSEMBLER:
========================================================================================

	c


========================================================================================
COMPILED HLL SUPPORT:
========================================================================================

	c


========================================================================================
INTERPRETERS:
========================================================================================

	c


========================================================================================
DATA TYPE SUPPORT:
========================================================================================

	c


========================================================================================
DATA STRUCTURE SUPPORT:
========================================================================================

	c


========================================================================================
LINKER AND LOADER:
========================================================================================

	c


========================================================================================
PROGRAM LOADING - METHOD AND PROCEDURE:
========================================================================================

	c


========================================================================================
DATA INPUT AND OTHER INTERACTION METHODS:
========================================================================================

	C


========================================================================================
STACK MACHINE:
========================================================================================

	c


========================================================================================
RAM - PHYSICAL MEDIUM AND MANAGEMENT TECHNIQUES:
========================================================================================

Physical medium: 
Architecture: 
Memory management techniques


========================================================================================
ROM - PHYSICAL MEDIUM:
========================================================================================

	c


========================================================================================
SECONDARY/PERMANENT STORAGE - PHYSICAL MEDIUM:
========================================================================================

	c


========================================================================================
SECONDARY/PERMANENT STORAGE - management techniques and a possible filesystem:
========================================================================================

	c


========================================================================================
DISPLAY PERIPHERAL - TECHNOLOGY, MODES, ETC.:
========================================================================================

Physical medium: 
Modes: text and graphics 


========================================================================================
OTHER PERIPHERAL DEVICES - keyboard, mouse, etc.:
========================================================================================

v


========================================================================================
FIRMWARE (hardware initialization routines , akin to BIOS):
========================================================================================

	H: 


========================================================================================
RESIDENT MONITOR / SUPERVISOR / OS DEVELOPMENT:
========================================================================================

	c


========================================================================================
DEBUGGER UTILITY:
========================================================================================

	C


========================================================================================
MULTITHREADING SUPPORT: 
========================================================================================

	c


========================================================================================
PROCESSING CORES (count , etc.): 
========================================================================================

	c

_
