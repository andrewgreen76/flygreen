
Lottery scheduling :
. the jobs that should be running with greater frequency should have better odds at going next
. every process gets a proportional amount of tickets in accord with intended frequency
. implementation :
  . a really good rand()
  . a data structure for sysprocs
  . total number of tickets


  A 	  	 B		C
  1-100	  	 101-150	151-400

  int cur_job_bound = 100;
  int win_tkt = 300; 
  node_t *cur_job = head_of_q; 


  . Once cur_job_bound > win_tkt , that's the job that wins. 
  . If jobs are sorted from largest to smallest ticket range, you'll flip through the smallest number of jobs.
    This increases efficiency in winner detection and , ergo , scheduling. 

.
