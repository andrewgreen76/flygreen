========================================================================================
AFS CLIENT-ONLY API : 
========================================================================================

 . open() brings a copy of the entire file into the client cache
 . close() flushes it to the server
 . the rest of the API is client-only ; server is not involved at all

 . afs_read and afs_write are implemented to be efficient , operating only on individual blocks 



============================================================================================================================================================

"
In AFS (Andrew File System), client-side system calls are used to interact with the AFS client software and perform operations related to accessing and managing files within the AFS environment. These system calls are distinct from traditional file system calls and are specific to the AFS client implementation.

While AFS primarily operates using standard file system interfaces, it introduces its own set of system calls on the client side to handle AFS-specific functionality. These client-side system calls are responsible for managing the AFS client cache, handling file access, and interacting with the AFS server.

Common AFS client system calls may include:

1. **afs_syscall (AFSCALL):**
   - A general-purpose AFS system call used for various AFS-related operations. This system call may encompass different AFS functionalities and serve as an entry point for AFS-specific actions.

2. **afs_mount (AFS_Mount):**
   - Used to mount an AFS volume on the client machine. This system call establishes a connection between the client and the AFS server, making the contents of the AFS volume accessible to the client.

3. **afs_lookup (AFS_Lookup):**
   - Performs a lookup operation to find the location of a file or directory within the AFS namespace.

4. **afs_read (AFS_Read) and afs_write (AFS_Write):**
   - AFS-specific versions of the standard read and write operations, allowing the client to read data from and write data to files stored in AFS.

5. **afs_stat (AFS_Stat):**
   - Retrieves file attributes (such as size, modification time, etc.) for a specified file or directory in AFS.

These are just examples, and the actual set of AFS client system calls may vary depending on the implementation and version of the AFS client software.

It's important to note that AFS is designed to provide a transparent file system interface to applications, and in many cases, standard POSIX file system calls can be used without modification. However, the introduction of client-side system calls in AFS is necessary to handle AFS-specific features and ensure seamless integration with the distributed file system.
"

_
