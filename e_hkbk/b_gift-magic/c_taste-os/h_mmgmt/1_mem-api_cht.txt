
Memory API syscalls :
_______________________________________________________________________________________________________________________________________

. open()
. read()
. write()
. fsync()
. close()
. brk()
. sbrk()
. mmap() 
_______________________________________________________________________________________________________________________________________

It is highly advised to use malloc() and free() instead of brk() and sbrk() for safer memory management. 

. brk(new_break)
  . changes the break of the program, i.e., the end of the heap

. sbrk(adjust)
  . adjusts the program break based on the incrementation/decrementation argument passed to it
  . returns the new program break 

. mmap(..)
  . creates an anonymous alternative to the heap
  . returns the address to the anonymous chunk 
  . ex. mmap(NULL, PAGESIZE,
            PROT_READ | PROT_WRITE,
            MAP_PRIVATE | MAP_ANONYMOUS, 0, 0);
  "
  . NULL - Tells the compiler that we don’t care where the memory is allocated.
  . # PAGESIZE 4096 - Tells the compiler how much memory to allocate. In this example, it is 4,096 bytes.
  . PROT_READ | PROT_WRITE - Provides protection for reading from and writing to region that has been mapped. (You CAN read and write to the memory.)
  . MAP_PRIVATE - The map is marked as “private” because it is not shared with another process.
  . MAP_ANONYMOUS - A file has not been mapped, so it is marked as "anonymous". 
  "
.
