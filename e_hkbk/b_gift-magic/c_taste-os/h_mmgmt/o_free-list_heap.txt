
Free list :
. a data structure that keeps tracks of all the pockets of free memory in the memory chunk of our interest (e.g., a heap)
. head -> [node: addr, len] -> ... -> [node: addr, len] -> NULL
. node implementation model :

    typedef struct __node_t {
	int size;
	struct __node_t *next;
    } node_t;



Allocator :
. an implemented agent that handles dynamic memory management 

Splitting : 
. When memory is requested for data , the allocator will pick out a node from the free list that can satisfy the request and split it in two.
  . one piece is returned to the caller
  . the rest stays on the list
|
Coalescing :
. adjacent free memory chunks are united in one node upon freeing memory 

.
