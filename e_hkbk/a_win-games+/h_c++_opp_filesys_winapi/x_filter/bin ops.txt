
Number type 	Number of bits		Number of values 		Unsigned range		Signed range

Bit		1			2				0 - 1			-1 - 0
Nibble		4			16				0 - 15			-8 - 7
Byte		8			256				0 - 255			-128 - 127
Word		16			65,536				0 - 65,535		-32,768 - 32,767
Double word 	32			4,294,967,296			0 - 4,294,967,295	-2,147,483,648 - 2,147,483,647

==================================================================================================================================

Memory: 

 - each address represents 1 B ( _ _ _ _ _ _ _ _  = 0x__)

Unsigned data: 
-1 = 1000
-10 = 1000 1001

Signed: 
858,993,460 = 0011 0011 0011 0011 0011 0011 0011 0100

Unsigned -858,993,460 =/= 1011 0011 0011 0011 0011 0011 0011 0011
 - use two's complement: 
Unsigned -858,993,460 = 
			0011 0011 0011 0011 0011 0011 0011 0100
								NOT
			1100 1100 1100 1100 1100 1100 1100 1011
								+1
			1100 1100 1100 1100 1100 1100 1100 1100

-858,993,460 = 1100 1100 1100 1100 1100 1100 1100 1100 = 0x CC CC CC CC <- double word. 



                 Borland or Turbo
Type                      C/C++ Type                               Bytes
--------------------------------------------------------------------------
Byte (unsigned)           unsigned char                                1
Byte (signed)             char                                         1
Word (unsigned)           unsigned int                                 2
Word (signed)             int                                          2
Double Word (unsigned)    unsigned long int (or "unsigned long")       4
Double Word (signed)      long int          (or "long")                4

==================================================================================================================================

Bitwise
Logical Operator  C/C++ Op.   Sample
----------------------------------------------------------------------------
AND               &           x = 0xF2 & 0xEC;
OR                |           printf ("Result is %X hex\n", 0x30 | 19);
XOR               ^           y = my_char ^ my_key;

==================================================================================================================================

Bitwise
Comparison  C/C++ Op.   Meaning
----------------------------------------------------------------------------
AND            &&           if and only if
OR             ||           Whenever ... or ... . 

==================================================================================================================================

Subtraction by using addition: "5 - 3" as "5 + (-3)" 

==================================================================================================================================

1 B 		1 B 			8 bits
1 KB		2^10 B = 1024 B		8,192 bits	
1 MB		2^10 = 1024 B			

