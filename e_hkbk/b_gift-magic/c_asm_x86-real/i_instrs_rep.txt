
========================================================================================
lodsb : 
========================================================================================

 . load [SI]_val into AL


========================================================================================
stosb : 
========================================================================================

 . store AL_val into [DI] 

"
- **`STOSB`**: This instruction stores the byte from the `AL` register into the memory location pointed to by `ES:DI`. The `ES` register specifies the segment, and `DI` specifies the offset within that segment.
"


========================================================================================
rep : 
========================================================================================

 . repeats the following instruction the number of times in CX
 . CX_val is decremented down to 0 , so at times it may have to be reset 
 > rep stosb 
 . this prefix to the same instruction is kind of like what the NASM 'times' directive is
   to the same 'db'/'dw'/'d?' directive 


"
- **`REP`**: This prefix modifies string instructions (`STOSB`, `MOVSB`, etc.) to repeat the operation `CX` times. It decrements `CX` after each operation and continues until `CX` reaches zero.

So, in summary:
- **`STOSB`** listens to `ES` and `DI` to determine where to store the byte.
- **`REP`** listens to `CX` to determine how many times to repeat the `STOSB` operation.
"
_
