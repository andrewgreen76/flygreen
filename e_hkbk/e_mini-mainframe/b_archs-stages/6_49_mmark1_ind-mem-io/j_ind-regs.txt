
 . used to access (and manipulate) a piece of data (string or array) stored in consecutive addresses 
 => can only be used to store addresses of data (operands)
 
 . come in pairs - source (SI) and destination (DI)
 . typically initialized together

	MOV SI , 4000H
	MOV DI , 6000H

 . mediated by the accumulator


========================================================================================
A GOOD EXAMPLE : 
========================================================================================

	ORG 1850H

START:
	MOV SI , 4000H
	MOV DI , 6000H
	MOV CX , 1000H

MOVE_NEXT:
	MOV AX , [SI]
	MOV [DI] , AX

	INC SI
	INC DI
	LOOP MOVE_NEXT

	HLT 


========================================================================================
EFFECTIVE ADDRESS (EA)
========================================================================================

 . mem_addr of interest (and manipulation)
 . EA = base + SI
   104 = 100 + 4
 . base is treated as a constant , SI is not 


============================================================================================================================================================

"
An index register is a type of register in a computer's CPU used to modify operand addresses during the execution of a program, typically for operations involving arrays, loops, and other repetitive processes. By adding the contents of the index register to the base address of an instruction, the CPU can efficiently access a sequence of memory locations.

Hereâ€™s a concise definition:

**Index Register**: A CPU register that holds an index value used to modify operand addresses during program execution, facilitating efficient access to sequential memory locations in loops and arrays.
"
_
