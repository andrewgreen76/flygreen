
- Any instance of a currently running program is a process.
- A program can run concurrently as multiple instances. All of these instances are individual processes.
- Every process has its own unique ID number, or PID. 



Process :
- code
- data
- heap :
  - holds memory reserved for variables at run-time 
  - programmer explicitly requests more memory on the heap using malloc() 
    - malloc() returns the address of the conjured heap chunk
    - returns NULL if it failed for some reason 
    must explicitly release heap memory using free() 
- stack :
  - init'd with :   argc and argv 
  - holds : 	    current func.args , local vars , return address
  - automatically handled by the compiler 



"
Processes are made of instructions, and each instruction can only do one of two things : 
- use the CPU
- issue an I/O request (and wait for I/O to finish) 
"
.
