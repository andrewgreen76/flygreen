
Assuming a minimum of two inputs/switches : 
- a two-input NAND is like a two-input AND but with an inversion
  = 2 two transistors / switch
  + 2 two transistors / switch
  + 2 two transistors / inverter
  + 2 two transistors / inverter, but do you really need this one ? 

  = 2 two transistors / switch
  + 2 two transistors / switch

  = 4+ transistors. 



Thought of as the most essential gate for creating entire behavioral circuits. 

	x NAND y = (x . y)'

x	y     	f

0	0	1
0	1	1
1	0	1
1	1	0



How is it the most essential gate ?

(x)' = (x . x)' = x NAND x
(x . y) = (x NAND y) '
