
========================================================================================
HOW TO WRITE YOUR OWN INTERRUPT : 
========================================================================================

 (1) check out the IVT
 
 (2) pick a CS:IP (ideally one that isn't used) 
     . figure out its offset
     -> convert hex offset to decimal
     -> convert the offset to interrupt vector in decimal 
     -> convert the interrupt vector to hex

 (3) change the CS:IP under the offset to whatever you like 

 (4) write your own ISR as a subroutine
     . use the `org` directive for correct placement of your ISR
     . write the body of the routine 
     . end it with `iret` 


========================================================================================
IRET 
========================================================================================

 . the idea is to be able to return from an interrupt call
 => `iret` is at the very end of every ISR
 . restores the process state (by restoring flags + CS:IP)


 . "`iret` returns from an interrupt service routine by restoring the CPU state, including
    flags and segment registers, while `ret` returns from a subroutine without restoring
    interrupt-specific states."

_
