
Assembling and linking :
 (a) using a makefile and `make all` ... but it won't allow exporting variables 
 (b) writing an executable Bash script    <- That's what we want. 

Completing the binary bootable image :
 . use `dd` ... 
   (1) to append bytes of data/text and
   (2) to ensure that the last intended sector in the binary image is padded with null bytes to the complete count of 512 bytes in the sector 

Running :
 $ qemu-system-x86_64 -hda ./[urboot].bin

_
