
===================================================================================
CONFIGURING THE IDE AND THE BOARDS : 
===================================================================================

 . Make sure the console is NOT powered on. 
 . Attach ATtiny85 to the ISP setup (a separate programming board or the game console itself)
 -> connect the ISP to the Arduino with a SPI connection 
 -> connect the Arduino to the PC with a USB cable
 . (If the console gets powered on via SPI , don't worry. Just make sure its own portable power source
 |  is not engaged.)
 |
 -> open the Arduino IDE
 |
 -> open the sketch for the ATmega328P (bootloader) within the IDE
 -> Tools > Board > ATmega328P 
 -> Tools > Processor > ATmega328P 
 -> Tools > Clock > [default] 
 -> [... Serial Port : COM1 ...]
 -> Verify , Compile , Upload 
 |
 -> open the sketch of a game within the IDE
 -> Tools > Board > ATtiny25/45/85 
 -> Tools > Processor > ATtiny85
 -> Tools > Clock > Internal 8 MHz -OR- 16MHz (PLL) 
 -> Tools > Programmer > Arduino as ISP
 -> Verify , Compile , Upload using the Programmer  


===================================================================================
===================================================================================
===================================================================================

. The ATmega328P will RECEIVE A PIECE OF CODE via USB and piggyback it to the ROM
    of the ATtiny85 on a separate board via a SPI connection - a 6-pin ribbon cable or individual jumper wires.
    (The practice of burning code onto the ROM of a microcontroller via a SPI cable is called ISP or In-System
    Programming.)

_
