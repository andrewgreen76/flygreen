
 . two states of a computer 
 . exist to segregate user requests and the system-critical operations


========================================================================================
KERNEL MODE 
========================================================================================

Privileged (kernel mode) operations include :
 |
 . working with a file system		/dev , /lib , etc. 
 . talking to processes			signal() -or- argc/argv
 . managing processes 			./ -or- SIGTSTP -or- SIGINT
 . kernel-level memory management	page swapping , virt.mem , etc.
 . accessing HW devices and resources 	I/O : peripherals , disk , NIC 


"
The kernel can perform several activities that user processes cannot, including:

1. **Accessing Hardware Devices**: Directly interfacing with hardware components like disk drives, network interface cards (NICs), and other peripherals.
2. **Memory Management**: Allocating, freeing, and managing memory addresses, including page swapping and managing virtual memory.
3. **Process Management**: Creating, scheduling, and terminating processes, as well as managing process states and inter-process communication.
4. **Interrupt Handling**: Responding to hardware interrupts and managing context switches between processes.
5. **Direct Access to System Resources**: Accessing system resources like the CPU, timers, and I/O ports that user processes cannot interact with directly.
6. **File System Management**: Interacting with the file system for reading and writing files, including managing permissions and access controls.
7. **Implementing Security Policies**: Enforcing access controls, permissions, and security policies to protect system integrity.
8. **Handling System Calls**: Providing the interface for user processes to request services from the kernel through system calls.
9. **Managing Device Drivers**: Loading and managing device drivers that control hardware devices.
10. **Setting Up Networking**: Configuring and managing network protocols, sockets, and direct communication over the network.

These activities are critical for maintaining system stability, security, and performance, and are restricted to the kernel to prevent user processes from compromising the system.
"

========================================================================================
USER MODE 
========================================================================================

User-mode activities :
 |
 . computations
 . variable manipulation
 . access to data and files already in process memory
 |
 . system calls
 | . user-mode requests to the kernel for privileged operations 
 | . e.g., read(), open(), exit()
 | . "implemented in assembly language for the low-level interface with the operating system"
 |
 . library calls 
   . user-level memory management ( malloc() , free() ) 


=======================================================================================
OTHER DETAILS 
========================================================================================

Ease of access :
   I. user mode w/ libraries 
  II. user mode w/o libraries 
 III. kernel mode 

========================================================================================

Perspecive on booting and access :


	Mode			"Sub-mode"		Time		
	........................................................................
	real mode					a few instructions
	protected mode		kernel mode		~10%-20% of instructions
		  		user mode		~80%-90% of instructions

_
