
========================================================================================
A Pipeline for the Incremental Development of a Custom CPU/Computer 
Design Document
by Andrew Green
========================================================================================


========================================================================================
OBJECTIVES:
========================================================================================

Build a custom CPU
Build a general-purpose computer with peripherals


========================================================================================
TOOLS: 
========================================================================================

Logisim
Altium Designer
PCBWay


========================================================================================
VISUAL DESCRIPTION: 
========================================================================================

features that define the general image of the device; components responsible for the mechanics; 
 . breadboard; PCB 


========================================================================================
PROGRAM INPUT - PHYSICAL MEDIA:
========================================================================================

ROM: 
storage: 


========================================================================================
ARCHITECTURE - GENERAL: 
========================================================================================

Modeled after RISC-V
Address bus width: 
Data bus width:
Control bus width:
Control signal count:
Instruction bus width:
Registers: 
Interrupts:
Etc.: 
https://en.wikipedia.org/wiki/Instruction_set_architecture
https://en.wikipedia.org/wiki/Simple-As-Possible_computer


========================================================================================
CONTROL LOGIC :
========================================================================================

Microinstruction format : 
 . modeled after RISC-V
 . modeled after x86
 . control instructions : jmp , add , sub , mul/mulh , floating-point div (fp-div)


Stepping : 


========================================================================================
INSTRUCTION CACHING , DATA CACHING , INSTRUCTION QUEUE:
========================================================================================

	c


========================================================================================
STACK MACHINES - HARDWARE AND SOFTWARE:
========================================================================================

	c


========================================================================================
IN-MEMORY INSTRUCTION WORD FORMAT:
========================================================================================

 . modeled after RISC-V


========================================================================================
ASSEMBLY FLAVOR / DEDICATED ASSEMBLER:
========================================================================================

 . modeled after RISC-V
 . modeled after x86 


========================================================================================
COMPILED HLL SUPPORT:
========================================================================================

	c


========================================================================================
INTERPRETERS:
========================================================================================

	c


========================================================================================
DATA TYPE SUPPORT:
========================================================================================

	c


========================================================================================
DATA STRUCTURE SUPPORT:
========================================================================================

	c


========================================================================================
LINKER AND LOADER:
========================================================================================

	c


========================================================================================
PROGRAM LOADING - METHOD AND PROCEDURE:
========================================================================================

	c


========================================================================================
DATA INPUT AND OTHER INTERACTION METHODS:
========================================================================================

	C


========================================================================================
RAM - PHYSICAL MEDIUM AND MANAGEMENT TECHNIQUES:
========================================================================================

Physical medium: 
Architecture: 
Memory management techniques


========================================================================================
ROM - PHYSICAL MEDIUM:
========================================================================================

	c


========================================================================================
SECONDARY/PERMANENT STORAGE - PHYSICAL MEDIUM:
========================================================================================

	c


========================================================================================
SECONDARY/PERMANENT STORAGE - management techniques and a possible filesystem:
========================================================================================

	c


========================================================================================
DISPLAY PERIPHERAL - TECHNOLOGY, MODES, ETC.:
========================================================================================

Physical medium: 
Modes: text and graphics 


========================================================================================
OTHER PERIPHERAL DEVICES - keyboard, mouse, etc.:
========================================================================================

v


========================================================================================
FIRMWARE (hardware initialization routines , akin to BIOS):
========================================================================================

	H: 


========================================================================================
RESIDENT MONITOR / SUPERVISOR / OS DEVELOPMENT:
========================================================================================

	c


========================================================================================
DEBUGGER UTILITY:
========================================================================================

	C


========================================================================================
MULTITHREADING SUPPORT: 
========================================================================================

	c


========================================================================================
PROCESSING CORES (count , etc.): 
========================================================================================

	c

_
