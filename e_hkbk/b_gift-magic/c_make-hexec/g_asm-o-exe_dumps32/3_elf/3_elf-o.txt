
Use `readelf [-flag]` to get a specific ELF field (section , segment , table , etc.) 


==============================================================================
OBJECT FILE FORMAT = ELF : 
==============================================================================

						In the ASCII view there's (1) text and (2) characters that
						are really representations of special bytes - binary data/code
						useful only to the machine (at the hardware level). 
--------------------------------------------+						 
ELF header , based on what we fed to NASM : |				    |
--------------------------------------------+				    v

00000000  7f 45 4c 46    01 01 01 00    00 00 00 00    00 00 00 00  |.ELF............|		
	     EI_MAG	 ^  ^  ^  ^	
	     		 |  |  |  |
	     		 |  |  |  EI_OSABI
	     		 |  |  EI_VERSION
			 |  EI_DATA
			 EI_CLASS

00000010  01 00 03 00    01 00 00 00    00 00 00 00    00 00 00 00  |................|		
00000020  40 00 00 00    00 00 00 00  	34 00 00 00    00 00 28 00  |@.......4.....(.|
00000030  05 00 02 00    00 00 00 00  	00 00 00 00    00 00 00 00  |................|
00000040  00 00 00 00    00 00 00 00  	00 00 00 00    00 00 00 00  |................|
*
00000060  00 00 00 00    00 00 00 00	01 00 00 00    01 00 00 00  |................|
00000070  06 00 00 00    00 00 00 00  	10 01 00 00    07 00 00 00  |................|		06..00   |  10 01 00 00 ? location of text ?  |  07..00 
00000080  00 00 00 00    00 00 00 00  	10 00 00 00    00 00 00 00  |................|
00000090  07 00 00 00    03 00 00 00  	00 00 00 00    00 00 00 00  |................|
000000a0  20 01 00 00    21 00 00 00  	00 00 00 00    00 00 00 00  | ...!...........|
000000b0  01 00 00 00    00 00 00 00  	11 00 00 00    02 00 00 00  |................|
000000c0  00 00 00 00    00 00 00 00  	50 01 00 00    40 00 00 00  |........P...@...|
000000d0  04 00 00 00    03 00 00 00  	04 00 00 00    10 00 00 00  |................|
000000e0  19 00 00 00    03 00 00 00  	00 00 00 00    00 00 00 00  |................|
000000f0  90 01 00 00    12 00 00 00  	00 00 00 00    00 00 00 00  |................|
00000100  01 00 00 00    00 00 00 00  	00 00 00 00    00 00 00 00  |................|
00000110  b8 01 00 00    00 cd 80 00  	00 00 00 00    00 00 00 00  |................|		mov eax , 0x 0000 0001	/  int 0x80
00000120  00 2e 74 65    78 74 00 2e  	73 68 73 74    72 74 61 62  |..text..shstrtab|		Sections/labels : segments (.text, .rodata, .data, .bss)
00000130  00 2e 73 79    6d 74 61 62  	00 2e 73 74    72 74 61 62  |..symtab..strtab|		 	   	  symbol table , string table , 
00000140  00 00 00 00    00 00 00 00  	00 00 00 00    00 00 00 00  |................|			   	  section header string table 
*	     	      	       	      	       	     	    					Section header table : 
00000160  01 00 00 00    00 00 00 00    00 00 00 00    04 00 f1 ff  |................|
00000170  00 00 00 00    00 00 00 00  	00 00 00 00    03 00 01 00  |................|
00000180  0b 00 00 00    00 00 00 00  	00 00 00 00    10 00 01 00  |................|
00000190  00 62 5f 67    65 6e 2e 61  	73 6d 00 5f    73 74 61 72  |.b_gen.asm._star|		Name of the source file	   |	Entry point 
000001a0  74 00 00 00    00 00 00 00  	00 00 00 00    00 00 00 00  |t...............|
000001b0

==============================================================================

(Program header table) 

Relocation entries :

Debug information :

(Optional sections)

_
