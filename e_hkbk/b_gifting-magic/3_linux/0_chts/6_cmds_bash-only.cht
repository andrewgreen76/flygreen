
Streaming commands (remembering and printing-by-default):
|
ls		- streams the contents of the current dir
cat		- streams the contents of the given file 
echo		- streams a specified string. 

cd [dir]	- go to the targeted directory
cd ..		- go back up to the parent directory

Helpers. (Press 'q' to exit them.)
|
whatis [cmd]	- briefly describes what the specified command does. 
man [cmd]	- comprehensive guide to the specified command. 

[cmd1] ; [cmd2]	- execute commands one after another. 
mkdir []	- create a new directory 
mv [old] [new]	- rename a directory / file 
rmdir []	- delete an empty directory 
rm -r [] 	- recursively delete a directory (that is not empty).
vim []		- edit/create file in Vim 
touch [] 	- create a (text) file 
rm [] 		- delete a file

grep ["s"] [c]	- prints lines with the given string/word within the specified stream (path/file or cmd-out) 
|		- feed the output of one command to another command as an arg. Can't do that with cat. 
cat "$(command)" - feed the output - a filepath - received from a command over to cat

find [br] -name [file]
find [br] -name "*word*"
|		- shows the path to the targeted file from the given dir down to the leaves.
|
find [br] -type d -name [dir]
find [br] -type d -name "*word*"
     	        - shows the path to the targeted dirs with the specified word in their names (from the given dir down to the leaves). 

clear/Ctrl+L	- clears the terminal 
history		- lists previously entered commands 
![num]		- execute the command as indexed by the history command 

>		- print to the targeted file, overwriting it
>> 		- print to the targeted file, appending to it
tee		- print to the terminal and the targeted file, overwriting it
tee -a 		- print to the terminal and the targeted file, appending to it

date		- gives local date and time 
pwd		- streams where you are (current working dir). For when there's no current working directory in the prompt or it's to be stored. 

<command> 2> errors.txt
<command> &> output.txt

