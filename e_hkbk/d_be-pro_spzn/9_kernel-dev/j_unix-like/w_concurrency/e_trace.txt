
The idea : 
. global static "counter" variable starts at 0 
. the program is to create two threads that would increment the counter variable a total of 20,000,000 times 
  (10,000,000 incrementations by each thread) 
. Problem output : The counter variable ends up being less than 20,000,000 and it's different every time. 

The "bad threads" program presents a case of a race condition :
. two processes or threads "racing" with one another while working with the same data 
. here : allowing two or more threads share the same global volatile variable (open to all) 

... where 0x08049a1c is the virtual address of the (global volatile) counter variable  
RISC instruction set :
. (PC starts with the address of the program)
. mov - uses 5 bytes 
. add - uses 3 bytes 
