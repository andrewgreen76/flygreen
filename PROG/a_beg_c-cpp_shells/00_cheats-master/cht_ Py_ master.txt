============================= Python cheat sheet ==========================
--------------------------------------  -----------------------------------
===========================================================================

---------------------------------------------------------------------------
----------------------------------- Basics: -------------------------------
---------------------------------------------------------------------------

# Comments are preceded by #. Below is a functional script: 

def func(pieceOfData): 		# In Py for SCOPES you use : instead of {}.
				# INDENTATION matters to scopes. 
    if pieceOfData:		# You don't need PARANTHESES for if.
				# For EXISTENCE check, type "if [THING]:"
        print (pieceOfData)	# You don't need semicolons at the end
				# of every line.
				# print() string is followed by a new line. 

func("Catch!")	# Funcs are followed by the point of execution entry but 
		# after that point you can write other statements. 

---------------------------------------------------------------------------
-------------------------------- while: loops: ----------------------------
---------------------------------------------------------------------------

while x < y:
    print(x)
    x = x + 1

---------------------------------------------------------------------------
------------------------------ Lists and tuples: --------------------------
---------------------------------------------------------------------------

Tuples: 	()	immutable, "ordered" (can't change seq) 
 		const

 - good for:	economy
		integrity
 - do NOT need ()



Lists: 		[]	mutable, "ordered" (can't change seq) 
		injectable/de-injectable

 - good for: 	DNA
 - DO need []



Sets: 		{}	immutable, "unordered" (seq doesn't matter) 
 		const, IDGAF 

 - good for:	lottery
 - DO need {}

---------------------------------------------------------------------------
--------------------------------------  -----------------------------------
---------------------------------------------------------------------------

Fibonacci: 

---------------------------------------------------------------------------
--------------------------------------  -----------------------------------
---------------------------------------------------------------------------
