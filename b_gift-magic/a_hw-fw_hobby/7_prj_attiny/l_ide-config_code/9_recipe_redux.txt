
===================================================================================
CONFIGURING THE IDE TO WORK CORRECTLY WITH THE BOARDS : 
===================================================================================

 . UNPLUG every board connection. 
 -> CONNECT the Arduino to the PC 
 -> open the ARDUINO IDE

Flashing external ISP programmer code onto the ATmega328P : 
 -> open the ATmega328P bootloader sketch (Examples -> 11. ArduinoISP) 
 -> Tools > Board > Arduino Uno 
 -> [... Serial Port : COM? / ttyACM? / ttyUSB? ...]
 -> Tools > Programmer > AVRISP mkII 
 -> Hold RESET , click on "Upload" , wait for the "Uploading ..." message , then after one sec release RESET.
    . uploads the piggybacking bootloader to ATmega's flash ROM 

Connecting the ATtiny85 : 
 . The console should NOT be powered on 
 . Attach ATtiny85 to the ISP setup 
 -> Connect the ISP setup to the Arduino with a SPI connection 

Flashing the bootloader onto the ATtiny85 : 
 -> Tools > Board > ATtiny25/45/85 
 -> Tools > Processor > ATtiny85
 -> Tools > Clock > Internal 8 MHz -OR- 16MHz (PLL) 
 -> Tools > Programmer > Arduino as ISP. (This will enable the piggybacking bootloader to be up and running.)
 -> Hold the RESET button on the board , go to Tools -> Burn Bootloader , wait for a message on
      the console , and then release the reset button.

Burn a game onto the ATtiny85 : 
 -> Open the .ino sketch for one of those games in the Arduino IDE.
 -> Hold the RESET button on the board , click on "Upload" , wait for the "Uploading ..." message on
      the console , and then release the reset button.
    . Verify/Compile and Upload. You should here a few beeps from the piezo pickup.
 -> Unplug the SPI/ISP connection.
 -> Connect the ATtiny85 to the console.
 -> Turn on the console with its own power source. You should here a few beeps from the piezo pickup. 

_
